Description: Mimic patches from Marco D'itri debian packaging
 These are almost the same updates from fort-validator package, trying to
 simplify the migration from this package to that package.
Origin: https://salsa.debian.org/md/fort-validator/-/tree/master/debian/patches
--- a/man/fort.8
+++ b/man/fort.8
@@ -225,6 +225,8 @@ The TAL ("Trust Anchor Locator") is a te
 its public key. (See RFC 8630.)
 .RE
 .P
+By default, the path is \fI/etc/tals\fR.
+.P
 
 .BR \-r ", " \-\-local-repository=\fIDIRECTORY\fR
 .RS 4
@@ -251,7 +253,7 @@ Fort's entire validation process operate
 Because rsync uses delta encoding, youâ€™re advised to keep this cache around. It
 significantly speeds up subsequent validation cycles.
 .P
-By default, the path is \fI/tmp/fort/repository\fR.
+By default, the path is \fI/var/lib/fort\fR.
 .RE
 .P
 
@@ -1196,30 +1198,30 @@ By default, it has a value of \fI43200\f
 .P
 
 .SH EXAMPLES
-.B fort \-\-init-tals \-\-tal=/tmp/tal
+.B fort \-\-init-tals \-\-tal=/etc/tals
 .RS 4
 Download the 5 RIR TALs into the specified directory. ARIN TAL will be
 downloaded only if the user accepts ARIN's RPA.
 .RE
 .P
 
-.B fort \-t /tmp/tal \-r /tmp/repository \-\-server.port=9323
+.B fort \-t /etc/tals \-r /var/lib/fort \-\-server.port=9323
 .RS 4
 Run FORT with all the default values, using a custom TALs directory, a
 custom repository directory as well, and binding the RTR server to port 9323.
 .RE
 .P
 
-.B fort \-t /tmp/tal \-r /tmp/repository \-\-mode=standalone \-\-output.roa=-
+.B fort \-t /etc/tals \-r /var/lib/fort \-\-mode=standalone \-\-output.roa=-
 .RS 4
 Run FORT as standalone and output ROAs CSV to the console.
 .RE
 .P
 
 .nf
-\fBfort \-t /tmp/tal \-r /tmp/repository \\
+\fBfort \-t /etc/tals \-r /var/lib/fort \\
      \-\-mode=standalone \\
-     \-\-slurm=/tmp/myslurm.slurm\fR
+     \-\-slurm=/etc/fort/slurm/\fR
 .fi
 .RS 4
 Run FORT as standalone and using a SLURM file.
@@ -1233,7 +1235,7 @@ Run FORT using the JSON configuration fi
 .P
 
 .nf
-\fBfort \-t /tmp/tal \-r /tmp/repository \\
+\fBfort \-t /etc/tals \-r /var/lib/fort \\
      \-\-server.address=::1 \-\-server.port=9323 \\
      \-\-server.interval.validation=1800 \\
      \-\-output.roa=/tmp/roas.csv\fR
@@ -1251,14 +1253,14 @@ to a specific value:
 .nf
 
 {
-  "tal": "/tmp/fort/tal/",
-  "local-repository": "/tmp/fort/repository/",
+  "tal": "/etc/tals/",
+  "local-repository": "/var/lib/fort/",
   "work-offline": false,
   "shuffle-uris": true,
   "maximum-certificate-depth": 32,
   "mode": "server",
   "daemon": false,
-  "slurm": "/tmp/fort/test.slurm",
+  "slurm": "/etc/fort/slurm/",
   "server": {
     "address": [
       "192.0.2.1",
--- a/src/config.c
+++ b/src/config.c
@@ -983,13 +983,17 @@ set_default_values(void)
 	rpki_config.server.interval.expire = 7200;
 	rpki_config.server.deltas_lifetime = 2;
 
-	rpki_config.tal = NULL;
+	rpki_config.tal = strdup("/etc/tals");
+	if (rpki_config.tal == NULL) {
+		error = pr_enomem();
+		goto revert_port;
+	}
 	rpki_config.slurm = NULL;
 
-	rpki_config.local_repository = strdup("/tmp/fort/repository");
+	rpki_config.local_repository = strdup("/var/lib/fort");
 	if (rpki_config.local_repository == NULL) {
 		error = pr_enomem();
-		goto revert_port;
+		goto revert_tal;
 	}
 
 	rpki_config.sync_strategy = RSYNC_ROOT_EXCEPT_TA;
@@ -1096,6 +1100,8 @@ revert_rsync_program:
 	free(rpki_config.rsync.program);
 revert_repository:
 	free(rpki_config.local_repository);
+revert_tal:
+	free(rpki_config.tal);
 revert_port:
 	free(rpki_config.server.port);
 revert_address:
